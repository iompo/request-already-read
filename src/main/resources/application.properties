quarkus.hibernate-orm.database.generation=drop-and-create
# Ssl
quarkus.http.ssl.certificate.files=request-already-read/src/main/resources/certs/server.cert
quarkus.http.ssl.certificate.key-files=request-already-read/src/main/resources/certs/server.key
# Proxy
quarkus.http.proxy.allow-forwarded=true
quarkus.http.proxy.proxy-address-forwarding=true
quarkus.http.proxy.enable-forwarded-host=true
quarkus.http.proxy.enable-forwarded-prefix=true
# Authentication
quarkus.http.auth.session.encryption-key = someSecureSecretKey
quarkus.http.auth.form.enabled = true
quarkus.http.auth.form.login-page = /login.html
quarkus.http.auth.form.error-page = /error.html
quarkus.http.auth.form.landing-page = /
quarkus.http.auth.proactive = true
quarkus.http.auth.form.redirect-after-login = true
quarkus.http.auth.form.timeout = ${SESSION_TIMEOUT:PT30M}
quarkus.http.auth.form.new-cookie-interval = PT1M
quarkus.http.auth.form.cookie-name = app-credentials
# Authorization
## Roles
quarkus.http.auth.policy.authenticatedUsersRole.roles-allowed = admin,user
quarkus.http.auth.policy.appUsersRole.roles-allowed = user
quarkus.http.auth.policy.adminUsersRole.roles-allowed = admin
## Security settings
quarkus.http.auth.permission.login.paths = /login.html,/error.html,/rest/unauth/**,/j_security_check
quarkus.http.auth.permission.login.policy = permit
quarkus.http.auth.permission.home.paths = /
quarkus.http.auth.permission.home.policy = authenticated
quarkus.http.auth.permission.home.methods = GET,HEAD
